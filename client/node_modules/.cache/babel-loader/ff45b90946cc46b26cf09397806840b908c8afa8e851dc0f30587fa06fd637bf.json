{"ast":null,"code":"import axios, { AxiosError } from 'axios';\n\n// Define the error response type\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst ML_API_URL = process.env.REACT_APP_ML_API_URL || 'http://localhost:6000';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3, _error$response3$data;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n  if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.message) {\n    throw new Error(error.response.data.message);\n  }\n  throw error;\n});\n\n// Auth API\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nexport const register = async (name, email, password) => {\n  try {\n    console.log('Registering user:', {\n      name,\n      email\n    });\n    const response = await api.post('/auth/register', {\n      name: name.trim(),\n      email: email.trim().toLowerCase(),\n      password\n    });\n    console.log('Registration successful:', response.data);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    console.error('Registration error:', error);\n    if (error instanceof AxiosError && (_error$response4 = error.response) !== null && _error$response4 !== void 0 && (_error$response4$data = _error$response4.data) !== null && _error$response4$data !== void 0 && _error$response4$data.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw new Error('Registration failed. Please try again.');\n  }\n};\n\n// Reviews API\nexport const createReview = async review => {\n  // First, get sentiment analysis from ML API\n  const sentimentResponse = await axios.post(`${ML_API_URL}/predict`, {\n    text: review.reviewText\n  });\n\n  // Then create review with sentiment\n  const response = await api.post('/reviews', {\n    ...review,\n    sentiment: sentimentResponse.data.sentiment\n  });\n  return response.data;\n};\nexport const getReviews = async queryString => {\n  const response = await api.get(`/reviews?${queryString}`);\n  return response.data;\n};\nexport const getReview = async id => {\n  const response = await api.get(`/reviews/${id}`);\n  return response.data;\n};\nexport const updateReview = async (id, review) => {\n  const response = await api.put(`/reviews/${id}`, review);\n  return response.data;\n};\nexport const deleteReview = async id => {\n  const response = await api.delete(`/reviews/${id}`);\n  return response.data;\n};\n\n// Stats API\nexport const getStats = async () => {\n  const response = await api.get('/reviews/stats');\n  return response.data;\n};\nexport const getUserStats = async userId => {\n  const response = await api.get(`/stats/user/${userId}`);\n  return response.data;\n};\n\n// ML API\nexport const analyzeSentiment = async text => {\n  const response = await axios.post(`${ML_API_URL}/predict`, {\n    text\n  });\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","AxiosError","API_URL","process","env","REACT_APP_API_URL","ML_API_URL","REACT_APP_ML_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","_error$response2","_error$response3","_error$response3$data","console","status","data","message","Error","login","email","password","post","setItem","register","name","log","trim","toLowerCase","_error$response4","_error$response4$data","createReview","review","sentimentResponse","text","reviewText","sentiment","getReviews","queryString","get","getReview","id","updateReview","put","deleteReview","delete","getStats","getUserStats","userId","analyzeSentiment"],"sources":["C:/capstone-Project/client/src/services/api.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\n\r\n// Define the error response type\r\ninterface ApiErrorResponse {\r\n  message: string;\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\nconst ML_API_URL = process.env.REACT_APP_ML_API_URL || 'http://localhost:6000';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error: AxiosError<ApiErrorResponse>) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message\r\n    });\r\n    if (error.response?.data?.message) {\r\n      throw new Error(error.response.data.message);\r\n    }\r\n    throw error;\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const login = async (email: string, password: string) => {\r\n  try {\r\n    const response = await api.post<{ token: string; user: any }>('/auth/login', { email, password });\r\n    localStorage.setItem('token', response.data.token);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const register = async (name: string, email: string, password: string) => {\r\n  try {\r\n    console.log('Registering user:', { name, email });\r\n    const response = await api.post<{ token: string; user: any }>('/auth/register', {\r\n      name: name.trim(),\r\n      email: email.trim().toLowerCase(),\r\n      password\r\n    });\r\n    console.log('Registration successful:', response.data);\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    if (error instanceof AxiosError && error.response?.data?.message) {\r\n      throw new Error(error.response.data.message);\r\n    }\r\n    throw new Error('Registration failed. Please try again.');\r\n  }\r\n};\r\n\r\n// Reviews API\r\nexport const createReview = async (review: {\r\n  movieTitle: string;\r\n  reviewText: string;\r\n  rating: number;\r\n}) => {\r\n  // First, get sentiment analysis from ML API\r\n  const sentimentResponse = await axios.post(`${ML_API_URL}/predict`, {\r\n    text: review.reviewText,\r\n  });\r\n\r\n  // Then create review with sentiment\r\n  const response = await api.post('/reviews', {\r\n    ...review,\r\n    sentiment: sentimentResponse.data.sentiment,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getReviews = async (queryString: string) => {\r\n  const response = await api.get(`/reviews?${queryString}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getReview = async (id: string) => {\r\n  const response = await api.get(`/reviews/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const updateReview = async (\r\n  id: string,\r\n  review: {\r\n    movieTitle?: string;\r\n    reviewText?: string;\r\n    rating?: number;\r\n  }\r\n) => {\r\n  const response = await api.put(`/reviews/${id}`, review);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteReview = async (id: string) => {\r\n  const response = await api.delete(`/reviews/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Stats API\r\nexport const getStats = async () => {\r\n  const response = await api.get('/reviews/stats');\r\n  return response.data;\r\n};\r\n\r\nexport const getUserStats = async (userId: string) => {\r\n  const response = await api.get(`/stats/user/${userId}`);\r\n  return response.data;\r\n};\r\n\r\n// ML API\r\nexport const analyzeSentiment = async (text: string) => {\r\n  const response = await axios.post(`${ML_API_URL}/predict`, { text });\r\n  return response.data;\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\capstone-Project\\\\client\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login, register, googleLogin } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for saved token and user data\n    const savedToken = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    console.log('Initial auth state check - Token exists:', !!savedToken);\n    if (savedToken && savedUser) {\n      setToken(savedToken);\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        setUser(parsedUser);\n        console.log('User authenticated from localStorage:', parsedUser.name);\n      } catch (e) {\n        console.error('Failed to parse saved user data:', e);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n\n    // Listen for authentication errors\n    const handleAuthError = () => {\n      console.log('Auth error event received, logging out');\n      setToken(null);\n      setUser(null);\n    };\n    window.addEventListener('auth-error', handleAuthError);\n    return () => {\n      window.removeEventListener('auth-error', handleAuthError);\n    };\n  }, []);\n  const handleLogin = async (email, password) => {\n    try {\n      console.log('Starting login process for:', email);\n      const data = await login(email, password);\n      if (!data || !data.token) {\n        throw new Error('Login failed: No authentication token received');\n      }\n      console.log('Login successful, token received');\n      setToken(data.token);\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      return data;\n    } catch (error) {\n      console.error('Login error in auth context:', error);\n      throw error;\n    }\n  };\n  const handleGoogleLogin = async tokenId => {\n    try {\n      console.log('Starting Google login process');\n      const data = await googleLogin(tokenId);\n      if (!data || !data.token) {\n        throw new Error('Google login failed: No authentication token received');\n      }\n      console.log('Google login successful, token received');\n      setToken(data.token);\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      return data;\n    } catch (error) {\n      console.error('Google login error in auth context:', error);\n      throw error;\n    }\n  };\n  const handleRegister = async (name, email, password) => {\n    try {\n      console.log('Starting registration for:', email);\n      const data = await register(name, email, password);\n      if (data.token && data.user) {\n        console.log('Registration successful, user created:', data.user.name);\n        setToken(data.token);\n        setUser(data.user);\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        return data;\n      } else {\n        throw new Error('Registration successful but no user data received');\n      }\n    } catch (error) {\n      console.error('Registration error in auth context:', error);\n      throw error;\n    }\n  };\n  const handleLogout = () => {\n    console.log('Logging out user');\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!token,\n    login: handleLogin,\n    googleLogin: handleGoogleLogin,\n    register: handleRegister,\n    logout: handleLogout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","register","googleLogin","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","loading","setLoading","savedToken","localStorage","getItem","savedUser","console","log","parsedUser","JSON","parse","name","e","error","removeItem","handleAuthError","window","addEventListener","removeEventListener","handleLogin","email","password","data","Error","setItem","stringify","handleGoogleLogin","tokenId","handleRegister","handleLogout","value","isAuthenticated","logout","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/capstone-Project/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { login, register, googleLogin } from '../services/api';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  googleLogin: (tokenId: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for saved token and user data\r\n    const savedToken = localStorage.getItem('token');\r\n    const savedUser = localStorage.getItem('user');\r\n\r\n    console.log('Initial auth state check - Token exists:', !!savedToken);\r\n\r\n    if (savedToken && savedUser) {\r\n      setToken(savedToken);\r\n      try {\r\n        const parsedUser = JSON.parse(savedUser);\r\n        setUser(parsedUser);\r\n        console.log('User authenticated from localStorage:', parsedUser.name);\r\n      } catch (e) {\r\n        console.error('Failed to parse saved user data:', e);\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n    \r\n    // Listen for authentication errors\r\n    const handleAuthError = () => {\r\n      console.log('Auth error event received, logging out');\r\n      setToken(null);\r\n      setUser(null);\r\n    };\r\n    \r\n    window.addEventListener('auth-error', handleAuthError);\r\n    \r\n    return () => {\r\n      window.removeEventListener('auth-error', handleAuthError);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogin = async (email: string, password: string) => {\r\n    try {\r\n      console.log('Starting login process for:', email);\r\n      const data = await login(email, password);\r\n      \r\n      if (!data || !data.token) {\r\n        throw new Error('Login failed: No authentication token received');\r\n      }\r\n      \r\n      console.log('Login successful, token received');\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Login error in auth context:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async (tokenId: string) => {\r\n    try {\r\n      console.log('Starting Google login process');\r\n      const data = await googleLogin(tokenId);\r\n      \r\n      if (!data || !data.token) {\r\n        throw new Error('Google login failed: No authentication token received');\r\n      }\r\n      \r\n      console.log('Google login successful, token received');\r\n      setToken(data.token);\r\n      setUser(data.user);\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Google login error in auth context:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (name: string, email: string, password: string) => {\r\n    try {\r\n      console.log('Starting registration for:', email);\r\n      const data = await register(name, email, password);\r\n      \r\n      if (data.token && data.user) {\r\n        console.log('Registration successful, user created:', data.user.name);\r\n        setToken(data.token);\r\n        setUser(data.user);\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        return data;\r\n      } else {\r\n        throw new Error('Registration successful but no user data received');\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error in auth context:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    console.log('Logging out user');\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    isAuthenticated: !!token,\r\n    login: handleLogin,\r\n    googleLogin: handleGoogleLogin,\r\n    register: handleRegister,\r\n    logout: handleLogout,\r\n    loading,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\n\n// Define the error response type\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst ML_API_URL = process.env.REACT_APP_ML_API_URL || 'http://localhost:5500';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response2$data;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.dispatchEvent(new Event('auth-error'));\n    throw new Error('Session expired. Please log in again.');\n  }\n  if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n    throw new Error(error.response.data.message);\n  }\n  throw error;\n});\n\n// Auth API\nexport const login = async (email, password) => {\n  const response = await api.post('/auth/login', {\n    email,\n    password\n  });\n  localStorage.setItem('token', response.data.token);\n  return response.data;\n};\nexport const register = async (name, email, password) => {\n  const response = await api.post('/auth/register', {\n    name: name.trim(),\n    email: email.trim().toLowerCase(),\n    password\n  });\n  if (response.data.token) {\n    localStorage.setItem('token', response.data.token);\n  }\n  return response.data;\n};\n\n// Movies API\nexport const getAllMovies = async () => {\n  const response = await api.get('/movies');\n  return response.data;\n};\nexport const getMovie = async id => {\n  const response = await api.get(`/movies/${id}`);\n  return response.data;\n};\n\n// Reviews API\nexport const createReview = async review => {\n  const response = await api.post('/reviews', review);\n  return response.data;\n};\nexport const getReviews = async movieId => {\n  const response = await api.get(`/reviews?movieId=${movieId}`);\n  return response.data;\n};\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","ML_API_URL","REACT_APP_ML_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","_error$response2","_error$response2$data","status","removeItem","window","dispatchEvent","Event","Error","data","message","login","email","password","post","setItem","register","name","trim","toLowerCase","getAllMovies","get","getMovie","id","createReview","review","getReviews","movieId","isAuthenticated","logout"],"sources":["C:/capstone-Project/client/src/services/api.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\n\r\n// Define the error response type\r\ninterface ApiErrorResponse {\r\n  message: string;\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\nconst ML_API_URL = process.env.REACT_APP_ML_API_URL || 'http://localhost:5500';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error: AxiosError<ApiErrorResponse>) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.dispatchEvent(new Event('auth-error'));\r\n      throw new Error('Session expired. Please log in again.');\r\n    }\r\n    \r\n    if (error.response?.data?.message) {\r\n      throw new Error(error.response.data.message);\r\n    }\r\n    throw error;\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const login = async (email: string, password: string) => {\r\n  const response = await api.post<{ token: string; user: any }>('/auth/login', { email, password });\r\n  localStorage.setItem('token', response.data.token);\r\n  return response.data;\r\n};\r\n\r\nexport const register = async (name: string, email: string, password: string) => {\r\n  const response = await api.post<{ token: string; user: any }>('/auth/register', {\r\n    name: name.trim(),\r\n    email: email.trim().toLowerCase(),\r\n    password\r\n  });\r\n  if (response.data.token) {\r\n    localStorage.setItem('token', response.data.token);\r\n  }\r\n  return response.data;\r\n};\r\n\r\n// Movies API\r\nexport const getAllMovies = async () => {\r\n  const response = await api.get('/movies');\r\n  return response.data;\r\n};\r\n\r\nexport const getMovie = async (id: string) => {\r\n  const response = await api.get(`/movies/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Reviews API\r\nexport const createReview = async (review: {\r\n  movieId: string;\r\n  movieTitle: string;\r\n  reviewText: string;\r\n}) => {\r\n  const response = await api.post('/reviews', review);\r\n  return response.data;\r\n};\r\n\r\nexport const getReviews = async (movieId: string) => {\r\n  const response = await api.get(`/reviews?movieId=${movieId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return !!localStorage.getItem('token');\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
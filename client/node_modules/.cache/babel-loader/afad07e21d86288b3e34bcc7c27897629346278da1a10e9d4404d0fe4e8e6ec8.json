{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst ML_API_URL = process.env.REACT_APP_ML_API_URL || 'http://localhost:6000';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const login = async (email, password) => {\n  const response = await api.post('/auth/login', {\n    email,\n    password\n  });\n  localStorage.setItem('token', response.data.token);\n  return response.data;\n};\nexport const register = async (name, email, password) => {\n  const response = await api.post('/auth/register', {\n    name,\n    email,\n    password\n  });\n  localStorage.setItem('token', response.data.token);\n  return response.data;\n};\n\n// Reviews API\nexport const createReview = async review => {\n  const response = await api.post('/reviews', review);\n  return response.data;\n};\nexport const getReviews = async () => {\n  const response = await api.get('/reviews');\n  return response.data;\n};\nexport const getReview = async id => {\n  const response = await api.get(`/reviews/${id}`);\n  return response.data;\n};\nexport const updateReview = async (id, review) => {\n  const response = await api.put(`/reviews/${id}`, review);\n  return response.data;\n};\nexport const deleteReview = async id => {\n  const response = await api.delete(`/reviews/${id}`);\n  return response.data;\n};\n\n// Stats API\nexport const getStats = async () => {\n  const response = await api.get('/reviews/stats');\n  return response.data;\n};\n\n// ML API\nexport const analyzeSentiment = async text => {\n  const response = await axios.post(`${ML_API_URL}/predict`, {\n    text\n  });\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","ML_API_URL","REACT_APP_ML_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","email","password","response","post","setItem","data","register","name","createReview","review","getReviews","get","getReview","id","updateReview","put","deleteReview","delete","getStats","analyzeSentiment","text"],"sources":["C:/capstone-Project/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\nconst ML_API_URL = process.env.REACT_APP_ML_API_URL || 'http://localhost:6000';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Auth API\r\nexport const login = async (email: string, password: string) => {\r\n  const response = await api.post('/auth/login', { email, password });\r\n  localStorage.setItem('token', response.data.token);\r\n  return response.data;\r\n};\r\n\r\nexport const register = async (name: string, email: string, password: string) => {\r\n  const response = await api.post('/auth/register', { name, email, password });\r\n  localStorage.setItem('token', response.data.token);\r\n  return response.data;\r\n};\r\n\r\n// Reviews API\r\nexport const createReview = async (review: {\r\n  movieTitle: string;\r\n  reviewText: string;\r\n  rating: number;\r\n}) => {\r\n  const response = await api.post('/reviews', review);\r\n  return response.data;\r\n};\r\n\r\nexport const getReviews = async () => {\r\n  const response = await api.get('/reviews');\r\n  return response.data;\r\n};\r\n\r\nexport const getReview = async (id: string) => {\r\n  const response = await api.get(`/reviews/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const updateReview = async (\r\n  id: string,\r\n  review: {\r\n    movieTitle?: string;\r\n    reviewText?: string;\r\n    rating?: number;\r\n  }\r\n) => {\r\n  const response = await api.put(`/reviews/${id}`, review);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteReview = async (id: string) => {\r\n  const response = await api.delete(`/reviews/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Stats API\r\nexport const getStats = async () => {\r\n  const response = await api.get('/reviews/stats');\r\n  return response.data;\r\n};\r\n\r\n// ML API\r\nexport const analyzeSentiment = async (text: string) => {\r\n  const response = await axios.post(`${ML_API_URL}/predict`, { text });\r\n  return response.data;\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
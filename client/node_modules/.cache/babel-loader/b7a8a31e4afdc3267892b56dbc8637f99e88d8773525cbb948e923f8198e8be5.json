{"ast":null,"code":"var _jsxFileName = \"C:\\\\capstone-Project\\\\client\\\\src\\\\pages\\\\NewReviewPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport ReviewForm from '../components/ReviewForm';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewReviewPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const [movieId, setMovieId] = useState('');\n  const [movieTitle, setMovieTitle] = useState('');\n  useEffect(() => {\n    // Get movieId and movieTitle from query parameters\n    const paramMovieId = searchParams.get('movieId');\n    const paramMovieTitle = searchParams.get('movieTitle');\n    if (paramMovieId) {\n      setMovieId(paramMovieId);\n    }\n    if (paramMovieTitle) {\n      setMovieTitle(paramMovieTitle);\n    }\n  }, [searchParams]);\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login', {\n        state: {\n          from: window.location.pathname + window.location.search\n        }\n      });\n    }\n  }, [isAuthenticated, navigate]);\n  const handleSuccess = () => {\n    // Redirect to dashboard or reviews page after successful submission\n    navigate('/dashboard', {\n      state: {\n        message: 'Review submitted successfully!'\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    className: \"container mx-auto max-w-2xl py-8 px-4 sm:px-6 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-900 mb-6\",\n      children: movieTitle ? `Write a Review for \"${movieTitle}\"` : 'Write a New Review'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n      movieId: movieId,\n      movieTitle: movieTitle,\n      onSuccess: handleSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex justify-start\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"text-indigo-600 hover:text-indigo-900\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(NewReviewPage, \"Rd2yXkR+Z4y0ISNKcrZDGXwdu2s=\", false, function () {\n  return [useSearchParams, useNavigate, useAuth];\n});\n_c = NewReviewPage;\nexport default NewReviewPage;\nvar _c;\n$RefreshReg$(_c, \"NewReviewPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","useAuth","ReviewForm","motion","jsxDEV","_jsxDEV","NewReviewPage","_s","searchParams","navigate","isAuthenticated","movieId","setMovieId","movieTitle","setMovieTitle","paramMovieId","get","paramMovieTitle","state","from","window","location","pathname","search","handleSuccess","message","div","initial","opacity","animate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onClick","_c","$RefreshReg$"],"sources":["C:/capstone-Project/client/src/pages/NewReviewPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport ReviewForm from '../components/ReviewForm';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst NewReviewPage: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated } = useAuth();\r\n  const [movieId, setMovieId] = useState<string>('');\r\n  const [movieTitle, setMovieTitle] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    // Get movieId and movieTitle from query parameters\r\n    const paramMovieId = searchParams.get('movieId');\r\n    const paramMovieTitle = searchParams.get('movieTitle');\r\n    \r\n    if (paramMovieId) {\r\n      setMovieId(paramMovieId);\r\n    }\r\n    \r\n    if (paramMovieTitle) {\r\n      setMovieTitle(paramMovieTitle);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  // Redirect to login if not authenticated\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/login', { state: { from: window.location.pathname + window.location.search } });\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const handleSuccess = () => {\r\n    // Redirect to dashboard or reviews page after successful submission\r\n    navigate('/dashboard', { state: { message: 'Review submitted successfully!' } });\r\n  };\r\n\r\n  return (\r\n    <motion.div \r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      className=\"container mx-auto max-w-2xl py-8 px-4 sm:px-6 lg:px-8\"\r\n    >\r\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\r\n        {movieTitle ? `Write a Review for \"${movieTitle}\"` : 'Write a New Review'}\r\n      </h1>\r\n      \r\n      <ReviewForm\r\n        movieId={movieId}\r\n        movieTitle={movieTitle}\r\n        onSuccess={handleSuccess}\r\n      />\r\n      \r\n      <div className=\"mt-6 flex justify-start\">\r\n        <button\r\n          onClick={() => navigate(-1)}\r\n          className=\"text-indigo-600 hover:text-indigo-900\"\r\n        >\r\n          ‚Üê Back\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default NewReviewPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAgB,CAAC,GAAGT,OAAO,CAAC,CAAC;EACrC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAS,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,YAAY,GAAGP,YAAY,CAACQ,GAAG,CAAC,SAAS,CAAC;IAChD,MAAMC,eAAe,GAAGT,YAAY,CAACQ,GAAG,CAAC,YAAY,CAAC;IAEtD,IAAID,YAAY,EAAE;MAChBH,UAAU,CAACG,YAAY,CAAC;IAC1B;IAEA,IAAIE,eAAe,EAAE;MACnBH,aAAa,CAACG,eAAe,CAAC;IAChC;EACF,CAAC,EAAE,CAACT,YAAY,CAAC,CAAC;;EAElB;EACAV,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,eAAe,EAAE;MACpBD,QAAQ,CAAC,QAAQ,EAAE;QAAES,KAAK,EAAE;UAAEC,IAAI,EAAEC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAGF,MAAM,CAACC,QAAQ,CAACE;QAAO;MAAE,CAAC,CAAC;IAC5F;EACF,CAAC,EAAE,CAACb,eAAe,EAAED,QAAQ,CAAC,CAAC;EAE/B,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACAf,QAAQ,CAAC,YAAY,EAAE;MAAES,KAAK,EAAE;QAAEO,OAAO,EAAE;MAAiC;IAAE,CAAC,CAAC;EAClF,CAAC;EAED,oBACEpB,OAAA,CAACF,MAAM,CAACuB,GAAG;IACTC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IACxBC,OAAO,EAAE;MAAED,OAAO,EAAE;IAAE,CAAE;IACxBE,SAAS,EAAC,uDAAuD;IAAAC,QAAA,gBAEjE1B,OAAA;MAAIyB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAClDlB,UAAU,GAAG,uBAAuBA,UAAU,GAAG,GAAG;IAAoB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eAEL9B,OAAA,CAACH,UAAU;MACTS,OAAO,EAAEA,OAAQ;MACjBE,UAAU,EAAEA,UAAW;MACvBuB,SAAS,EAAEZ;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEF9B,OAAA;MAAKyB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eACtC1B,OAAA;QACEgC,OAAO,EAAEA,CAAA,KAAM5B,QAAQ,CAAC,CAAC,CAAC,CAAE;QAC5BqB,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAClD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB,CAAC;AAAC5B,EAAA,CA3DID,aAAuB;EAAA,QACJN,eAAe,EACrBD,WAAW,EACAE,OAAO;AAAA;AAAAqC,EAAA,GAH/BhC,aAAuB;AA6D7B,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
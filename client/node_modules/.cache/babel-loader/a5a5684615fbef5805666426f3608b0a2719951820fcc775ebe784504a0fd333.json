{"ast":null,"code":"var _jsxFileName = \"C:\\\\capstone-Project\\\\client\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login, register, getCurrentUser, logout } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const userData = await getCurrentUser();\n          setUser(userData);\n        } catch (error) {\n          console.error('Failed to load user:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n  const handleLogin = async (email, password) => {\n    const {\n      token,\n      user\n    } = await login(email, password);\n    localStorage.setItem('token', token);\n    setToken(token);\n    setUser(user);\n    return {\n      token,\n      user\n    };\n  };\n  const handleRegister = async (name, email, password) => {\n    const {\n      token,\n      user\n    } = await register(name, email, password);\n    localStorage.setItem('token', token);\n    setToken(token);\n    setUser(user);\n    return {\n      token,\n      user\n    };\n  };\n  const handleLogout = () => {\n    logout();\n    setUser(null);\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login: handleLogin,\n      register: handleRegister,\n      logout: handleLogout,\n      isAuthenticated: !!token,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","register","getCurrentUser","logout","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","loadUser","userData","error","console","removeItem","handleLogin","email","password","setItem","handleRegister","name","handleLogout","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/capstone-Project/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { login, register, getCurrentUser, isAuthenticated, logout } from '../services/api';\r\nimport { User } from '../types/api';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<{ token: string; user: User }>;\r\n  register: (name: string, email: string, password: string) => Promise<{ token: string; user: User }>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  token: string | null;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (token) {\r\n        try {\r\n          const userData = await getCurrentUser();\r\n          setUser(userData);\r\n        } catch (error) {\r\n          console.error('Failed to load user:', error);\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    loadUser();\r\n  }, [token]);\r\n\r\n  const handleLogin = async (email: string, password: string) => {\r\n    const { token, user } = await login(email, password);\r\n    localStorage.setItem('token', token);\r\n    setToken(token);\r\n    setUser(user);\r\n    return { token, user };\r\n  };\r\n\r\n  const handleRegister = async (name: string, email: string, password: string) => {\r\n    const { token, user } = await register(name, email, password);\r\n    localStorage.setItem('token', token);\r\n    setToken(token);\r\n    setUser(user);\r\n    return { token, user };\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        login: handleLogin,\r\n        register: handleRegister,\r\n        logout: handleLogout,\r\n        isAuthenticated: !!token,\r\n        token\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}